You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0].

Each element nums[i] represents the maximum length of a forward jump from index i. In other words, if you are at nums[i], you can jump to any nums[i + j] where:




class Solution:
    def jump(self, nums):
        jumps=0
        curr_end=0
        curr_farthest=0
        n=len(nums)
        for i in range(n-1):
            curr_farthest=max(curr_farthest,i+nums[i])
            if(i==curr_end):
                jumps+=1
                curr_end=curr_farthest
        return jumps
s=Solution()
nums=[2,1,3,4,6]
hi=s.jump(nums)
print(hi)
