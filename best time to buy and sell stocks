You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.



class Solution:
    def maxProfit(self, prices):
        buy = prices[0]  # Initialize the buy price to the first price
        profit = 0       # Initialize profit to 0

        for i in range(1, len(prices)):  # Start iterating from the second price
            if prices[i] < buy:           # If the current price is lower than the buy price
                buy = prices[i]            # Update the buy price
            elif prices[i] - buy > profit:  # If selling at the current price gives a higher profit
                profit = prices[i] - buy    # Update the maximum profit

        return profit  # Return the maximum profit found


s = Solution()
prices =[6,1,3,5,2,9,4]
s.maxProfit(prices)
print(prices)
